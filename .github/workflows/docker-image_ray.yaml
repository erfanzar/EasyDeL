name: Docker Image CI/CD
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        target:
          - {file: Dockerfile.ray, tag: ray-cpu, tagsuf: "-ray-cpu", args: "HARDWARE_TYPE=cpu RAY_IMAGE=rayproject/ray:2.47.1-py311"}
          - {file: Dockerfile.ray, tag: ray-gpu, tagsuf: "-ray-gpu", args: "HARDWARE_TYPE=gpu RAY_IMAGE=rayproject/ray:2.47.1-py311-gpu"}
          - {file: Dockerfile.ray, tag: ray-tpu, tagsuf: "-ray-tpu", args: "HARDWARE_TYPE=tpu RAY_IMAGE=rayproject/ray:2.47.1-py311"}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install toml
      - name: Extract version
        id: meta
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      - name: Log in to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.target.file }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.version }}${{ matrix.target.tagsuf }}
            ghcr.io/dvruette/easydel:latest${{ matrix.target.tagsuf }}
            ghcr.io/dvruette/easydel:${{ steps.meta.outputs.date }}${{ matrix.target.tagsuf }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            ${{ matrix.target.args }}
          cache-from: type=registry,ref=ghcr.io/dvruette/easydel:buildcache
          cache-to: type=registry,ref=ghcr.io/dvruette/easydel:buildcache,mode=max
      - name: Prune build cache
        if: always()
        run: |
          docker buildx prune -af || true
          docker system prune -af || true