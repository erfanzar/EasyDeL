[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[project]
name = "easydel"
version = "0.1.5.dev22"
authors = [{ name = "Erfan Zare Chavoshi", email = "Erfanzare810@gmail.com" }]
description = "Accelerate, Optimize performance with streamlined training and serving options with JAX."
readme = "README.md"
requires-python = ">=3.11,<3.14"
license = { text = "Apache-2.0" }
keywords = [
	"Deep Learning",
	"Machine Learning",
	"JAX",
	"CUDA",
	"XLA",
	"Triton",
	"Pallas",
]
classifiers = [
	"Development Status :: 3 - Alpha",
	"Intended Audience :: Developers",
	"Topic :: Scientific/Engineering :: Artificial Intelligence",
	"License :: OSI Approved :: Apache Software License",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
]
dependencies = [
	"jax>=0.7.1",
	"jaxlib>=0.7.1",
	"ray[default]==2.34.0",
	"eformer @ git+https://github.com/erfanzar/eformer.git",
	"einops~=0.8.0",
	"transformers>=4.53.1",
	"flax==0.11.0",
	"optax>=0.2.2",
	"triton~=3.2.0",
	"jaxtyping~=0.3.2",
	"tqdm",
	"fastapi>=0.115.2",
	"wandb>=0.18.5",
	"uvloop==0.21.0",
	"uvicorn[standard]>=0.32.0",
	"jinja2>=3.1.5",
	"grain~=0.2.11",
	"datasets>=3.6.0",
	"gcsfs>=2024.2,<2026",
	"zstandard>=0.23.0",
	"msgspec~=0.19.0",
	"partial-json-parser>=0.2.1.1.post6",
	"google-api-python-client>=2.179.0",
	"cryptography>=45.0.6",
]

[project.urls]
"Homepage" = "https://github.com/erfanzar/EasyDeL"
"Repository" = "https://github.com/erfanzar/EasyDeL"
"Documentation" = "https://easydel.readthedocs.io/en/latest/"

[tool.uv.build-backend]
module-name = "easydel"
module-root = "."

[tool.setuptools]
package-dir = { "" = "." }

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
"easydel" = ["py.typed"]

[project.optional-dependencies]
torch = ["torch==2.6.0", "tensorboard>=2.19.0"]
gpu = ["jax[cuda12]>=0.7.1", "torch==2.6.0", "tensorboard>=2.19.0"]
tpu = ["jax[tpu]>=0.7.1", "tensorboard>=2.19.0"]
tensorflow = ["tensorflow~=2.19.0", "tensorflow-datasets~=4.9.9"]
lm_eval = ["lm_eval~=0.4.9.1"]
profile = [
	"xprof>=2.20.6",
	"tb-nightly>=2.21.0a20250820",
	"xprof-nightly>=2.21.6a20250820",
]
[tool.black]
line-length = 121
target-version = ["py311"]
preview = true

[tool.ruff]
line-length = 121
target-version = "py311"

[tool.ruff.lint]
select = ["A", "B", "E", "F", "I", "NPY", "RUF", "UP", "W"]
ignore = ["F722", "B008", "UP015", "A005"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
exclude = ["easydel/"]

[tool.basedpyright]
reportAssignmentType = "none"
reportUnknownVariableType = "none"
reportPrivateUsage = "none"
reportOptionalCall = "none"
reportUnknownMemberType = "none"
reportGeneralTypeIssues = "none"
reportArgumentType = "none"
enableTypeIgnoreComments = true
reportMissingTypeArgument = "none"
reportUnknownParameterType = "none"
reportAny = "none"
reportCallIssue = "none"
reportUnknownArgumentType = "none"
reportRedeclaration = "none"
reportIgnoreCommentWithoutRule = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedCallResult = "none"
reportUnknownLambdaType = "none"
reportUnannotatedClassAttribute = "none"
reportImplicitStringConcatenation = "none"
reportMissingParameterType = "none"
reportImplicitOverride = "none"
reportImplicitAbstractClass = "none"
reportExplicitAny = "none"
reportIncompatibleMethodOverride = "none"
reportIndexIssue = "none"
reportAttributeAccessIssue = "none"
reportUnreachable = "none"
reportOptionalMemberAccess = "none"
reportOperatorIssue = "none"
reportUninitializedInstanceVariable = "none"
reportIncompatibleVariableOverride = "none"
reportPrivateImportUsage = "none"
reportUnusedParameter = "none"

[tool.uv]
conflicts = [
	[
		{ extra = "gpu" },
		{ extra = "tpu" },
	],
	[
		{ extra = "gpu" },
		{ extra = "torch" },
	],
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch-cpu", marker = "extra == 'torch'" }
